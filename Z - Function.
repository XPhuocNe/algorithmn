// Link problem: https://oj.vnoi.info/problem/bedao_g01_distr
// Time: 5:03 07/09/2024.

#include <bits/stdc++.h>
#define NAME "XPhuoc"

using namespace std;

#define X first
#define Y second
#define pb push_back
#define Fort(i, a, b) for (int i = (a), _b = (b); i <= _b; i++)
#define Ford(i, a, b) for (int i = (a), _b = (b); i >= _b; i--)

typedef pair<int, int> pairII;
typedef pair<int, long long > pairIL;

const long long MOD = 1e9 + 7;

template <typename T>
    bool maximize(T &x, T y)
    {
        if (x > y || x == y)
            return 0;

        x = y;
        return 1;
    }

template <typename T>
    bool minimize(T &x, T y)
    {
        if (x <= y)
            return 0;

        x = y;
        return 1;
    }

template <typename T>
    void total(T &x, T y)
    {
        x += y;
        x %= MOD;

        x += MOD;
        x %= MOD;
    }

/*..............................................................................................................................................*/

const int N = 1e5;

int n;
string S;

int zF[N + 7];
long long res[N + 7];

int k;

void ZFunction()
{
    zF[1] = n;
    zF[n + 1] = 0;

    int l = 1, r = 1;

    Fort(i, 2, n)
        if (r < i)
        {
            l = i, r = i;

            while (r <= n && S[r] == S[r - l + 1])
                r++;

            zF[i] = r - l;
            r--;
        }
        else
        {
            if (zF[i - l + 1] < r - l + 1) zF[i] = zF[i - l + 1];
            else
            {
                l = i, r = i;

                while (r <= n && S[r] == S[r - l + 1])
                    r++;

                zF[i] = r - l;
                r--;
            }
        }
}

void Read()
{
    cin >> n >> k;

    cin >> S;

    n = S.size();
    S = ' ' + S;
}

void init()
{

}


bool checkCase(int x)
{
    for(int i = 0; i < k; i++)
        if (zF[i * x + 1] < x) return 0;

    return 1;
}

void Solve()
{
    ZFunction();

    Fort(x, 1, n / k)
        if (checkCase(x))
        {
            int l = x * k;
            int r = min(n, l + min(zF[x * k + 1], x));

            res[l]++;
            res[r + 1]--;
        }

    long long result = 0;

    Fort(i, 1, n)
    {
        res[i] += res[i - 1];

        result += res[i] > 0;
    }

    cout << result << "\n";
}
int main()
{
    ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);

    #ifndef ONLINE_JUDGE
        freopen(NAME".INP", "r", stdin);
        freopen(NAME".OUT", "w", stdout);
    #endif // ONLINE_JUDGE

    int TEST = 1;

    if (TEST == 0)
        cin >> TEST;

    while (TEST--)
    {
        Read();
        init();
        Solve();
    }

    return 0;
}
