// Link problem: https://lqdoj.edu.vn/problem/candydistribute2.

#include <bits/stdc++.h>
#define X first
#define Y second
using namespace std;
typedef long long ll;
const int N = 1e7 + 5;
const ll MOD = 1e9 + 7;
ll fact[N], rfac[N];
ll Pow(ll a, ll b)
{
    if (b == 1) return a % MOD;
    if (b == 0) return 1;
    ll tmp = Pow(a, b / 2);
    tmp = (tmp * tmp) % MOD;
    if (b % 2) return tmp * a % MOD;
    return tmp;
}
ll C(ll k, ll n)
{
    if (n == 0) return 1;
    if (n < 0) return 0;
    return fact[n] * rfac[k] % MOD * rfac[n - k] % MOD;
}
void Solve()
{
    ll n, k, l, h;
    cin >> n >> k >> l >> h;
    if (n > h * k || n < l * k)
    {
        cout << 0 << "\n";
        return ;
    }
    if (k == 1)
    {
        cout << (l <= n && n <= h);
        return ;
    }
    n -= (l * k);
    h -= l;
    fact[0] = 1;
    rfac[0] = 1;
    for (ll i = 1; i <= n + k - 1; i++)
    {
        fact[i] = (fact[i - 1] * i * 1LL) % MOD;
        rfac[i] = Pow(fact[i], MOD - 2);
    }
    ll ans = 0;
    ll base = 1;

    for (ll i = 0; i <= k; i++)
    {
        if (n < 0) break;
        ans = (ans + base * C(i, k) * C(k - 1, n + k - 1) % MOD) % MOD;
        base = -base;
        n -= (h + 1);
    }
    ans = (ans + MOD) % MOD;
    cout << ans << "\n";
}
int main()
{
    ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);
    freopen("TEST.INP", "r", stdin);
    freopen("TEST.OUT", "w", stdout);
    Solve();
    return 0;
}
